'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace GetSunat
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://service.sunat.gob.pe", ConfigurationName:="GetSunat.billService")>  _
    Public Interface billService
        
        'CODEGEN: El parámetro 'status' requiere información adicional de esquema que no se puede capturar con el modo de parámetros. El atributo específico es 'System.Xml.Serialization.XmlElementAttribute'.
        <System.ServiceModel.OperationContractAttribute(Action:="urn:getStatus", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getStatus(ByVal request As GetSunat.getStatusRequest) As <System.ServiceModel.MessageParameterAttribute(Name:="status")> GetSunat.getStatusResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="urn:getStatus", ReplyAction:="*")>  _
        Function BegingetStatus(ByVal request As GetSunat.getStatusRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndgetStatus(ByVal result As System.IAsyncResult) As GetSunat.getStatusResponse
        
        'CODEGEN: El parámetro 'applicationResponse' requiere información adicional de esquema que no se puede capturar con el modo de parámetros. El atributo específico es 'System.Xml.Serialization.XmlElementAttribute'.
        <System.ServiceModel.OperationContractAttribute(Action:="urn:sendBill", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function sendBill(ByVal request As GetSunat.sendBillRequest) As <System.ServiceModel.MessageParameterAttribute(Name:="applicationResponse")> GetSunat.sendBillResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="urn:sendBill", ReplyAction:="*")>  _
        Function BeginsendBill(ByVal request As GetSunat.sendBillRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndsendBill(ByVal result As System.IAsyncResult) As GetSunat.sendBillResponse
        
        'CODEGEN: El parámetro 'ticket' requiere información adicional de esquema que no se puede capturar con el modo de parámetros. El atributo específico es 'System.Xml.Serialization.XmlElementAttribute'.
        <System.ServiceModel.OperationContractAttribute(Action:="urn:sendPack", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function sendPack(ByVal request As GetSunat.sendPackRequest) As <System.ServiceModel.MessageParameterAttribute(Name:="ticket")> GetSunat.sendPackResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="urn:sendPack", ReplyAction:="*")>  _
        Function BeginsendPack(ByVal request As GetSunat.sendPackRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndsendPack(ByVal result As System.IAsyncResult) As GetSunat.sendPackResponse
        
        'CODEGEN: El parámetro 'ticket' requiere información adicional de esquema que no se puede capturar con el modo de parámetros. El atributo específico es 'System.Xml.Serialization.XmlElementAttribute'.
        <System.ServiceModel.OperationContractAttribute(Action:="urn:sendSummary", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function sendSummary(ByVal request As GetSunat.sendSummaryRequest) As <System.ServiceModel.MessageParameterAttribute(Name:="ticket")> GetSunat.sendSummaryResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="urn:sendSummary", ReplyAction:="*")>  _
        Function BeginsendSummary(ByVal request As GetSunat.sendSummaryRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndsendSummary(ByVal result As System.IAsyncResult) As GetSunat.sendSummaryResponse
    End Interface
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://service.sunat.gob.pe")>  _
    Partial Public Class statusResponse
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private contentField() As Byte
        
        Private statusCodeField As String
        Private statusMessageField As String
        '''<comentarios/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType:="base64Binary", Order:=0)>  _
        Public Property content() As Byte()
            Get
                Return Me.contentField
            End Get
            Set
                Me.contentField = value
                Me.RaisePropertyChanged("content")
            End Set
        End Property

        '''<comentarios/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)>
        Public Property statusCode() As String
            Get
                Return Me.statusCodeField
            End Get
            Set
                Me.statusCodeField = value
                Me.RaisePropertyChanged("statusCode")
            End Set
        End Property
        ''agregado juan calderon
        '''<comentarios/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)>
        Public Property statusMessage() As String
            Get
                Return Me.statusMessageField
            End Get
            Set
                Me.statusMessageField = Value
                Me.RaisePropertyChanged("statusMessage")
            End Set
        End Property
        ''agregado juan calderon

        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getStatus", WrapperNamespace:="http://service.sunat.gob.pe", IsWrapped:=true)>  _
    Partial Public Class getStatusRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://service.sunat.gob.pe", Order:=0),  _
         System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public ticket As String
        '' agregado juan calderon
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://service.sunat.gob.pe", Order:=0),
         System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>
        Public rucComprobante As String

        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://service.sunat.gob.pe", Order:=1),
         System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>
        Public tipoComprobante As String

        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://service.sunat.gob.pe", Order:=2),
         System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>
        Public serieComprobante As String

        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://service.sunat.gob.pe", Order:=3),
         System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>
        Public numeroComprobante As Integer
        ' end juan calderon
        Public Sub New()
            MyBase.New
        End Sub

        Public Sub New(ByVal ticket As String)
            MyBase.New
            Me.ticket = ticket
        End Sub
        '' agregado juan calderon
        Public Sub New(ByVal rucComprobante As String, ByVal tipoComprobante As String, ByVal serieComprobante As String, ByVal numeroComprobante As Integer)
            MyBase.New
            Me.rucComprobante = rucComprobante
            Me.tipoComprobante = tipoComprobante
            Me.serieComprobante = serieComprobante
            Me.numeroComprobante = numeroComprobante
        End Sub
        '' agregado juan calderon
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getStatusResponse", WrapperNamespace:="http://service.sunat.gob.pe", IsWrapped:=true)>  _
    Partial Public Class getStatusResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://service.sunat.gob.pe", Order:=0),  _
         System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public status As GetSunat.statusResponse
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal status As GetSunat.statusResponse)
            MyBase.New
            Me.status = status
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="sendBill", WrapperNamespace:="http://service.sunat.gob.pe", IsWrapped:=true)>  _
    Partial Public Class sendBillRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://service.sunat.gob.pe", Order:=0),  _
         System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public fileName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://service.sunat.gob.pe", Order:=1),  _
         System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType:="base64Binary")>  _
        Public contentFile() As Byte
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://service.sunat.gob.pe", Order:=2),  _
         System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public partyType As String
        
        Public Sub New()
            MyBase.New
        End Sub

        Public Sub New(ByVal fileName As String, ByVal contentFile() As Byte, ByVal partyType As String)
            MyBase.New
            Me.fileName = fileName
            Me.contentFile = contentFile
            Me.partyType = partyType
        End Sub
        Public Sub New(ByVal fileName As String, ByVal contentFile() As Byte)
            MyBase.New
            Me.fileName = fileName
            Me.contentFile = contentFile
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="sendBillResponse", WrapperNamespace:="http://service.sunat.gob.pe", IsWrapped:=true)>  _
    Partial Public Class sendBillResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://service.sunat.gob.pe", Order:=0),  _
         System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType:="base64Binary")>  _
        Public applicationResponse() As Byte
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal applicationResponse() As Byte)
            MyBase.New
            Me.applicationResponse = applicationResponse
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="sendPack", WrapperNamespace:="http://service.sunat.gob.pe", IsWrapped:=true)>  _
    Partial Public Class sendPackRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://service.sunat.gob.pe", Order:=0),  _
         System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public fileName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://service.sunat.gob.pe", Order:=1),  _
         System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType:="base64Binary")>  _
        Public contentFile() As Byte
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://service.sunat.gob.pe", Order:=2),  _
         System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public partyType As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal fileName As String, ByVal contentFile() As Byte, ByVal partyType As String)
            MyBase.New
            Me.fileName = fileName
            Me.contentFile = contentFile
            Me.partyType = partyType
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="sendPackResponse", WrapperNamespace:="http://service.sunat.gob.pe", IsWrapped:=true)>  _
    Partial Public Class sendPackResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://service.sunat.gob.pe", Order:=0),  _
         System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public ticket As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ticket As String)
            MyBase.New
            Me.ticket = ticket
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="sendSummary", WrapperNamespace:="http://service.sunat.gob.pe", IsWrapped:=true)>  _
    Partial Public Class sendSummaryRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://service.sunat.gob.pe", Order:=0),  _
         System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public fileName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://service.sunat.gob.pe", Order:=1),  _
         System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType:="base64Binary")>  _
        Public contentFile() As Byte
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://service.sunat.gob.pe", Order:=2),  _
         System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public partyType As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal fileName As String, ByVal contentFile() As Byte, ByVal partyType As String)
            MyBase.New
            Me.fileName = fileName
            Me.contentFile = contentFile
            Me.partyType = partyType
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="sendSummaryResponse", WrapperNamespace:="http://service.sunat.gob.pe", IsWrapped:=true)>  _
    Partial Public Class sendSummaryResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://service.sunat.gob.pe", Order:=0),  _
         System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public ticket As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ticket As String)
            MyBase.New
            Me.ticket = ticket
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface billServiceChannel
        Inherits GetSunat.billService, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class getStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As GetSunat.statusResponse
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetSunat.statusResponse)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class sendBillCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As Byte()
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class sendPackCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class sendSummaryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class billServiceClient
        Inherits System.ServiceModel.ClientBase(Of GetSunat.billService)
        Implements GetSunat.billService
        
        Private onBegingetStatusDelegate As BeginOperationDelegate
        
        Private onEndgetStatusDelegate As EndOperationDelegate
        
        Private ongetStatusCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginsendBillDelegate As BeginOperationDelegate
        
        Private onEndsendBillDelegate As EndOperationDelegate
        
        Private onsendBillCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginsendPackDelegate As BeginOperationDelegate
        
        Private onEndsendPackDelegate As EndOperationDelegate
        
        Private onsendPackCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginsendSummaryDelegate As BeginOperationDelegate
        
        Private onEndsendSummaryDelegate As EndOperationDelegate
        
        Private onsendSummaryCompletedDelegate As System.Threading.SendOrPostCallback
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Event getStatusCompleted As System.EventHandler(Of getStatusCompletedEventArgs)
        
        Public Event sendBillCompleted As System.EventHandler(Of sendBillCompletedEventArgs)
        
        Public Event sendPackCompleted As System.EventHandler(Of sendPackCompletedEventArgs)
        
        Public Event sendSummaryCompleted As System.EventHandler(Of sendSummaryCompletedEventArgs)
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function GetSunat_billService_getStatus(ByVal request As GetSunat.getStatusRequest) As GetSunat.getStatusResponse Implements GetSunat.billService.getStatus
            Return MyBase.Channel.getStatus(request)
        End Function

        Public Function getStatus(ByVal ticket As String) As GetSunat.statusResponse
            Dim inValue As GetSunat.getStatusRequest = New GetSunat.getStatusRequest()
            inValue.ticket = ticket
            Dim retVal As GetSunat.getStatusResponse = CType(Me, GetSunat.billService).getStatus(inValue)
            Return retVal.status
        End Function
        'agregado juan
        Public Function getStatus(ByVal rucComprobante As String, ByVal tipoComprobante As String, ByVal serieComprobante As String, ByVal numeroComprobante As Integer) As GetSunat.statusResponse
            Dim inValue As GetSunat.getStatusRequest = New GetSunat.getStatusRequest()
            inValue.rucComprobante = rucComprobante
            inValue.tipoComprobante = tipoComprobante
            inValue.serieComprobante = serieComprobante
            inValue.numeroComprobante = numeroComprobante
            Dim retVal As GetSunat.getStatusResponse = CType(Me, GetSunat.billService).getStatus(inValue)
            Return retVal.status
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function GetSunat_billService_BegingetStatus(ByVal request As GetSunat.getStatusRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements GetSunat.billService.BegingetStatus
            Return MyBase.Channel.BegingetStatus(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BegingetStatus(ByVal ticket As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim inValue As GetSunat.getStatusRequest = New GetSunat.getStatusRequest()
            inValue.ticket = ticket
            Return CType(Me,GetSunat.billService).BegingetStatus(inValue, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function GetSunat_billService_EndgetStatus(ByVal result As System.IAsyncResult) As GetSunat.getStatusResponse Implements GetSunat.billService.EndgetStatus
            Return MyBase.Channel.EndgetStatus(result)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndgetStatus(ByVal result As System.IAsyncResult) As GetSunat.statusResponse
            Dim retVal As GetSunat.getStatusResponse = CType(Me,GetSunat.billService).EndgetStatus(result)
            Return retVal.status
        End Function
        
        Private Function OnBegingetStatus(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim ticket As String = CType(inValues(0),String)
            Return Me.BegingetStatus(ticket, callback, asyncState)
        End Function
        
        Private Function OnEndgetStatus(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As GetSunat.statusResponse = Me.EndgetStatus(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OngetStatusCompleted(ByVal state As Object)
            If (Not (Me.getStatusCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent getStatusCompleted(Me, New getStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub getStatusAsync(ByVal ticket As String)
            Me.getStatusAsync(ticket, Nothing)
        End Sub
        
        Public Overloads Sub getStatusAsync(ByVal ticket As String, ByVal userState As Object)
            If (Me.onBegingetStatusDelegate Is Nothing) Then
                Me.onBegingetStatusDelegate = AddressOf Me.OnBegingetStatus
            End If
            If (Me.onEndgetStatusDelegate Is Nothing) Then
                Me.onEndgetStatusDelegate = AddressOf Me.OnEndgetStatus
            End If
            If (Me.ongetStatusCompletedDelegate Is Nothing) Then
                Me.ongetStatusCompletedDelegate = AddressOf Me.OngetStatusCompleted
            End If
            MyBase.InvokeAsync(Me.onBegingetStatusDelegate, New Object() {ticket}, Me.onEndgetStatusDelegate, Me.ongetStatusCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function GetSunat_billService_sendBill(ByVal request As GetSunat.sendBillRequest) As GetSunat.sendBillResponse Implements GetSunat.billService.sendBill
            Return MyBase.Channel.sendBill(request)
        End Function

        Public Function sendBill(ByVal fileName As String, ByVal contentFile() As Byte, ByVal partyType As String) As Byte()
            Dim inValue As GetSunat.sendBillRequest = New GetSunat.sendBillRequest()
            inValue.fileName = fileName
            inValue.contentFile = contentFile
            inValue.partyType = partyType
            Dim retVal As GetSunat.sendBillResponse = CType(Me, GetSunat.billService).sendBill(inValue)
            Return retVal.applicationResponse
        End Function
        Public Function sendBill(ByVal fileName As String, ByVal contentFile() As Byte) As Byte()
            Dim inValue As GetSunat.sendBillRequest = New GetSunat.sendBillRequest()
            inValue.fileName = fileName
            inValue.contentFile = contentFile
            Dim retVal As GetSunat.sendBillResponse = CType(Me, GetSunat.billService).sendBill(inValue)
            Return retVal.applicationResponse
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function GetSunat_billService_BeginsendBill(ByVal request As GetSunat.sendBillRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements GetSunat.billService.BeginsendBill
            Return MyBase.Channel.BeginsendBill(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginsendBill(ByVal fileName As String, ByVal contentFile() As Byte, ByVal partyType As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim inValue As GetSunat.sendBillRequest = New GetSunat.sendBillRequest()
            inValue.fileName = fileName
            inValue.contentFile = contentFile
            inValue.partyType = partyType
            Return CType(Me,GetSunat.billService).BeginsendBill(inValue, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function GetSunat_billService_EndsendBill(ByVal result As System.IAsyncResult) As GetSunat.sendBillResponse Implements GetSunat.billService.EndsendBill
            Return MyBase.Channel.EndsendBill(result)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndsendBill(ByVal result As System.IAsyncResult) As Byte()
            Dim retVal As GetSunat.sendBillResponse = CType(Me,GetSunat.billService).EndsendBill(result)
            Return retVal.applicationResponse
        End Function
        
        Private Function OnBeginsendBill(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim fileName As String = CType(inValues(0),String)
            Dim contentFile() As Byte = CType(inValues(1),Byte())
            Dim partyType As String = CType(inValues(2),String)
            Return Me.BeginsendBill(fileName, contentFile, partyType, callback, asyncState)
        End Function
        
        Private Function OnEndsendBill(ByVal result As System.IAsyncResult) As Object()
            Dim retVal() As Byte = Me.EndsendBill(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnsendBillCompleted(ByVal state As Object)
            If (Not (Me.sendBillCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent sendBillCompleted(Me, New sendBillCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub sendBillAsync(ByVal fileName As String, ByVal contentFile() As Byte, ByVal partyType As String)
            Me.sendBillAsync(fileName, contentFile, partyType, Nothing)
        End Sub
        
        Public Overloads Sub sendBillAsync(ByVal fileName As String, ByVal contentFile() As Byte, ByVal partyType As String, ByVal userState As Object)
            If (Me.onBeginsendBillDelegate Is Nothing) Then
                Me.onBeginsendBillDelegate = AddressOf Me.OnBeginsendBill
            End If
            If (Me.onEndsendBillDelegate Is Nothing) Then
                Me.onEndsendBillDelegate = AddressOf Me.OnEndsendBill
            End If
            If (Me.onsendBillCompletedDelegate Is Nothing) Then
                Me.onsendBillCompletedDelegate = AddressOf Me.OnsendBillCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginsendBillDelegate, New Object() {fileName, contentFile, partyType}, Me.onEndsendBillDelegate, Me.onsendBillCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function GetSunat_billService_sendPack(ByVal request As GetSunat.sendPackRequest) As GetSunat.sendPackResponse Implements GetSunat.billService.sendPack
            Return MyBase.Channel.sendPack(request)
        End Function
        
        Public Function sendPack(ByVal fileName As String, ByVal contentFile() As Byte, ByVal partyType As String) As String
            Dim inValue As GetSunat.sendPackRequest = New GetSunat.sendPackRequest()
            inValue.fileName = fileName
            inValue.contentFile = contentFile
            inValue.partyType = partyType
            Dim retVal As GetSunat.sendPackResponse = CType(Me,GetSunat.billService).sendPack(inValue)
            Return retVal.ticket
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function GetSunat_billService_BeginsendPack(ByVal request As GetSunat.sendPackRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements GetSunat.billService.BeginsendPack
            Return MyBase.Channel.BeginsendPack(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginsendPack(ByVal fileName As String, ByVal contentFile() As Byte, ByVal partyType As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim inValue As GetSunat.sendPackRequest = New GetSunat.sendPackRequest()
            inValue.fileName = fileName
            inValue.contentFile = contentFile
            inValue.partyType = partyType
            Return CType(Me,GetSunat.billService).BeginsendPack(inValue, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function GetSunat_billService_EndsendPack(ByVal result As System.IAsyncResult) As GetSunat.sendPackResponse Implements GetSunat.billService.EndsendPack
            Return MyBase.Channel.EndsendPack(result)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndsendPack(ByVal result As System.IAsyncResult) As String
            Dim retVal As GetSunat.sendPackResponse = CType(Me,GetSunat.billService).EndsendPack(result)
            Return retVal.ticket
        End Function
        
        Private Function OnBeginsendPack(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim fileName As String = CType(inValues(0),String)
            Dim contentFile() As Byte = CType(inValues(1),Byte())
            Dim partyType As String = CType(inValues(2),String)
            Return Me.BeginsendPack(fileName, contentFile, partyType, callback, asyncState)
        End Function
        
        Private Function OnEndsendPack(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As String = Me.EndsendPack(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnsendPackCompleted(ByVal state As Object)
            If (Not (Me.sendPackCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent sendPackCompleted(Me, New sendPackCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub sendPackAsync(ByVal fileName As String, ByVal contentFile() As Byte, ByVal partyType As String)
            Me.sendPackAsync(fileName, contentFile, partyType, Nothing)
        End Sub
        
        Public Overloads Sub sendPackAsync(ByVal fileName As String, ByVal contentFile() As Byte, ByVal partyType As String, ByVal userState As Object)
            If (Me.onBeginsendPackDelegate Is Nothing) Then
                Me.onBeginsendPackDelegate = AddressOf Me.OnBeginsendPack
            End If
            If (Me.onEndsendPackDelegate Is Nothing) Then
                Me.onEndsendPackDelegate = AddressOf Me.OnEndsendPack
            End If
            If (Me.onsendPackCompletedDelegate Is Nothing) Then
                Me.onsendPackCompletedDelegate = AddressOf Me.OnsendPackCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginsendPackDelegate, New Object() {fileName, contentFile, partyType}, Me.onEndsendPackDelegate, Me.onsendPackCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function GetSunat_billService_sendSummary(ByVal request As GetSunat.sendSummaryRequest) As GetSunat.sendSummaryResponse Implements GetSunat.billService.sendSummary
            Return MyBase.Channel.sendSummary(request)
        End Function
        
        Public Function sendSummary(ByVal fileName As String, ByVal contentFile() As Byte, ByVal partyType As String) As String
            Dim inValue As GetSunat.sendSummaryRequest = New GetSunat.sendSummaryRequest()
            inValue.fileName = fileName
            inValue.contentFile = contentFile
            inValue.partyType = partyType
            Dim retVal As GetSunat.sendSummaryResponse = CType(Me,GetSunat.billService).sendSummary(inValue)
            Return retVal.ticket
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function GetSunat_billService_BeginsendSummary(ByVal request As GetSunat.sendSummaryRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements GetSunat.billService.BeginsendSummary
            Return MyBase.Channel.BeginsendSummary(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginsendSummary(ByVal fileName As String, ByVal contentFile() As Byte, ByVal partyType As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim inValue As GetSunat.sendSummaryRequest = New GetSunat.sendSummaryRequest()
            inValue.fileName = fileName
            inValue.contentFile = contentFile
            inValue.partyType = partyType
            Return CType(Me,GetSunat.billService).BeginsendSummary(inValue, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function GetSunat_billService_EndsendSummary(ByVal result As System.IAsyncResult) As GetSunat.sendSummaryResponse Implements GetSunat.billService.EndsendSummary
            Return MyBase.Channel.EndsendSummary(result)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndsendSummary(ByVal result As System.IAsyncResult) As String
            Dim retVal As GetSunat.sendSummaryResponse = CType(Me,GetSunat.billService).EndsendSummary(result)
            Return retVal.ticket
        End Function
        
        Private Function OnBeginsendSummary(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim fileName As String = CType(inValues(0),String)
            Dim contentFile() As Byte = CType(inValues(1),Byte())
            Dim partyType As String = CType(inValues(2),String)
            Return Me.BeginsendSummary(fileName, contentFile, partyType, callback, asyncState)
        End Function
        
        Private Function OnEndsendSummary(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As String = Me.EndsendSummary(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnsendSummaryCompleted(ByVal state As Object)
            If (Not (Me.sendSummaryCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent sendSummaryCompleted(Me, New sendSummaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub sendSummaryAsync(ByVal fileName As String, ByVal contentFile() As Byte, ByVal partyType As String)
            Me.sendSummaryAsync(fileName, contentFile, partyType, Nothing)
        End Sub
        
        Public Overloads Sub sendSummaryAsync(ByVal fileName As String, ByVal contentFile() As Byte, ByVal partyType As String, ByVal userState As Object)
            If (Me.onBeginsendSummaryDelegate Is Nothing) Then
                Me.onBeginsendSummaryDelegate = AddressOf Me.OnBeginsendSummary
            End If
            If (Me.onEndsendSummaryDelegate Is Nothing) Then
                Me.onEndsendSummaryDelegate = AddressOf Me.OnEndsendSummary
            End If
            If (Me.onsendSummaryCompletedDelegate Is Nothing) Then
                Me.onsendSummaryCompletedDelegate = AddressOf Me.OnsendSummaryCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginsendSummaryDelegate, New Object() {fileName, contentFile, partyType}, Me.onEndsendSummaryDelegate, Me.onsendSummaryCompletedDelegate, userState)
        End Sub
    End Class
End Namespace
